{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/hoc/withAuthRedirect.js","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileContacts.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","mapRedirectToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","ProfileStatus","useState","editStatus","setEditStatus","status","setStatus","useEffect","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","className","s","onClick","ProfileContacts","contactTitle","contactValue","ProfileData","info","profile","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","Object","keys","map","el","key","isOwner","edit","activateEditMode","reduxForm","form","onSubmit","handleSubmit","error","Field","name","component","Input","input","type","Textarea","save","ProfileInfo","editMode","setEditMode","Preloader","wrapper","fullName","photo","src","photos","large","noavatar","alt","match","params","userId","undefined","id","target","files","length","savePhoto","htmlFor","upload","history","location","pathname","saveProfile","then","Post","item","avatar","smallPhoto","message","like","likesCount","maxLength1000","maxLength","placeholder","validate","required","send","MyPosts","postsElements","posts","p","small","posts_wrapper","addPost","valueOfPostArea","MyPostsContainer","MyPostsContainerConnected","profilePage","Profile","ProfileContainer","updateUserId","myUserId","push","getUserProfile","getStatus","prevProps","prevState","compose","withRouter"],"mappings":"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","file":"static/js/3.b83e9a7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_wrapper\":\"MyPosts_posts_wrapper__3Ma9X\",\"posts\":\"MyPosts_posts__1DFnM\",\"send\":\"MyPosts_send__2EgwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"ProfileInfo_photo__1CUjs\",\"name\":\"ProfileInfo_name__3pyuB\",\"status\":\"ProfileInfo_status__2Cl4B\",\"info\":\"ProfileInfo_info__59TFq\",\"contacts\":\"ProfileInfo_contacts__2lg9Y\",\"edit\":\"ProfileInfo_edit__1PXHG\",\"save\":\"ProfileInfo_save__36W0g\",\"error\":\"ProfileInfo_error__YIl_k\",\"upload\":\"ProfileInfo_upload__2MV8U\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapRedirectToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) { return <Redirect to={'/login'} /> }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let connectedAuthRedirectComponent = connect(mapRedirectToProps)(RedirectComponent);\r\n\r\n    return connectedAuthRedirectComponent;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__26rmY\",\"posts\":\"Profile_posts__8UE7s\",\"info\":\"Profile_info__1rRxB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__et3xe\",\"avatar\":\"Post_avatar__LK2JS\",\"like\":\"Post_like__2LIdS\"};","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    const [editStatus, setEditStatus] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activeEditStatus = () => {\r\n        setEditStatus(true)\r\n    }\r\n\r\n    const deactiveEditStatus = () => {\r\n        setEditStatus(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>{editStatus\r\n            ? <div><b>status: </b><input onChange={onChangeStatus} onBlur={deactiveEditStatus} autoFocus={true} value={status} /></div>\r\n            : <div className={s.status} onClick={activeEditStatus}><b>status: </b>{props.status || 'No status'}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\n\r\nconst ProfileContacts = (props) => {\r\n    return (<div>\r\n        <p>{props.contactTitle}: {props.contactValue || 'no'}</p>\r\n    </div>)\r\n}\r\n\r\nexport default ProfileContacts;","import React from 'react';\r\nimport ProfileContacts from './ProfileContacts';\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileData = (props) => {\r\n    return (<div>\r\n        <div className={s.info}>\r\n            <b>Looking for a job:</b> {props.profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        <div className={s.info}>\r\n            <b>Looking for a job description</b> {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        <div className={s.info}>\r\n            <b>About me:</b> {props.profile.aboutMe}\r\n        </div>\r\n        <div className={s.contacts}>\r\n            <b>Contacts:</b>{Object.keys(props.profile.contacts).map(el => {\r\n                return <ProfileContacts key={el} contactTitle={el} contactValue={props.profile.contacts[el]} />\r\n            })}\r\n        </div>\r\n        {!props.isOwner && <button className={s.edit} onClick={props.activateEditMode}>edit profile info</button>}\r\n    </div>)\r\n}\r\n\r\nexport default ProfileData;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Input, Textarea } from '../../common/Validation/FormControls/FormControls'\r\n\r\nconst ProfileForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n\r\n        {props.error && <div className={s.error}>\r\n            {props.error}\r\n        </div>\r\n        }\r\n        <div className={s.info}>\r\n            <b>Full Name:</b> <Field name='fullName' component={Input} className={s.input} />\r\n        </div>\r\n        <div className={s.info}>\r\n            <b>lookingForAJob:</b> <Field name='lookingForAJob' component={Input} type='checkbox' />\r\n        </div>\r\n        <div className={s.info}>\r\n            <b >Looking for a job description:</b> <Field name='LookingForAJobDescription' component={Textarea} />\r\n        </div>\r\n        <div className={s.info}>\r\n            <b>About me:</b> <Field name='aboutMe' component={Textarea} />\r\n        </div>\r\n        <div className={s.contacts}>\r\n            <b>Contacts:</b>{Object.keys(props.profile.contacts).map(el => {\r\n                return <div>{el}: <Field name={'contacts.' + el} component={Input} className={s.input} key={el} /></div>\r\n            })}\r\n            <div><button className={s.save}>save</button></div>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'profile-form'\r\n})(ProfileForm)\r\n","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport noavatar from '../../../assets/img/noavatar.png'\r\nimport ProfileData from './ProfileData';\r\nimport ProfileForm from './ProfileForm';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst ProfileInfo = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const changeMainPhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (profile) => {\r\n        props.saveProfile(profile).then(\r\n            () => {\r\n                setEditMode(false)\r\n            })\r\n    }\r\n\r\n    return (<div>\r\n        <div className={s.wrapper}>\r\n            <div>\r\n                <div className={s.name}><h3>{props.profile.fullName}</h3></div>\r\n                <NavLink to='/profile'><img className={s.photo} src={props.profile.photos.large || noavatar} alt='avatar' /></NavLink>\r\n            </div>\r\n            <div>{!props.match.params.userId ? <input id='file' type='file' onChange={changeMainPhoto} /> : undefined}\r\n                <label htmlFor='file' className={s.upload}>{props.history.location.pathname === '/profile' ? 'change photo' : ''}</label></div>\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus} isOwner={props.match.params.userId} />\r\n            {editMode ? <ProfileForm profile={props.profile} onSubmit={onSubmit} /> : <ProfileData profile={props.profile}\r\n                isOwner={props.match.params.userId} activateEditMode={() => { setEditMode(true) }} />}\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport noavatar from '../../../../assets/img/noavatar.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.avatar}>\r\n                <NavLink to='/profile'><img src={props.smallPhoto || noavatar} alt='avatar'></img></NavLink>\r\n            </div>\r\n            <div className={s.avatar}>\r\n                {props.message}\r\n            </div>\r\n            <div className={s.like}>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../../common/Validation/FormControls/FormControls';\r\nimport { required, maxLength } from '../../../common/Validation/Validation';\r\nimport s from '../MyPosts.module.css'\r\n\r\nconst maxLength1000 = maxLength(1000)\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} placeholder='Enter your message'\r\n                    validate={[required, maxLength1000]} name='valueOfPostArea' />\r\n            </div>\r\n            <div>\r\n                <button className={s.send}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: 'DialogAddPostForm' })(AddPostForm);","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport AddPostForm from './AddPostForm/AddPostForm';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\nconst MyPosts = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    let postsElements = props.posts.map((p) => <Post message={p.message} likesCount={p.likesCount} id={p.id} key={p.id} smallPhoto={props.profile.photos.small} />)\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.valueOfPostArea)\r\n    }\r\n\r\n    return (\r\n        <div className={s.posts_wrapper}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostForm onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPost } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nclass MyPostsContainer extends React.Component {\r\n    render() {\r\n        return <div>\r\n            <MyPosts {...this.props} />\r\n        </div >\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst MyPostsContainerConnected = connect(mapStateToProps, { addPost })(MyPostsContainer)\r\n\r\nexport default MyPostsContainerConnected;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (<div className={s.wrapper}>\r\n        <div className={s.info}>\r\n            <ProfileInfo {...props} />\r\n        </div>\r\n        <div className={s.posts}>\r\n            <MyPostsContainer {...props} />\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux'\r\nclass ProfileContainer extends React.Component {\r\n\r\n    updateUserId = () => {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.myUserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateUserId()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.updateUserId()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Profile {...this.props} />\r\n        </div >\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        myUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}